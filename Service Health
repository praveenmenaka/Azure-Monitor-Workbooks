{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "<img src=\"https://www.ciraltos.com/wp-content/uploads/2018/09/SH.png\" alt=\"HCLTech\" width=\"70\" height=\"70\">"
            },
            "customWidth": "10",
            "name": "text - 3 - Copy - Copy",
            "styleSettings": {
              "margin": "10",
              "padding": "10",
              "maxWidth": "10"
            }
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "customWidth": "30",
            "name": "text - 6",
            "styleSettings": {
              "margin": "30",
              "padding": "30",
              "maxWidth": "30"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "# Service Health Workbook"
            },
            "customWidth": "20",
            "name": "text - 3",
            "styleSettings": {
              "margin": "20",
              "padding": "20",
              "maxWidth": "20"
            }
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "customWidth": "30",
            "name": "text - 7",
            "styleSettings": {
              "margin": "30",
              "padding": "30",
              "maxWidth": "30"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<img src=\"https://www.ciraltos.com/wp-content/uploads/2018/09/SH.png\" alt=\"HCLTech\" width=\"70\" height=\"70\">"
            },
            "customWidth": "10",
            "name": "text - 3 - Copy - Copy - Copy",
            "styleSettings": {
              "margin": "10",
              "padding": "10",
              "maxWidth": "10"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Summary",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscriptions}"
                          ],
                          "parameters": [
                            {
                              "id": "8f6e6229-cdf0-4a40-86a5-d640fe0ed0f6",
                              "version": "KqlParameterItem/1.0",
                              "name": "Subscriptions",
                              "type": 6,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1",
                                  "value::all"
                                ],
                                "includeAll": true,
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "value": [
                                "/subscriptions/61f1b943-e15f-42a1-b3e4-a098cb2826e1",
                                "/subscriptions/1c0c41e9-8fe8-4ae8-b996-5a1dd1cd7701",
                                "/subscriptions/42d55838-585f-4a26-b055-3b7c78326ebc",
                                "/subscriptions/4c18ce9f-e28d-4f9b-966f-ebe469a1123b",
                                "/subscriptions/6c76103f-b987-4d6b-8f8d-b251cb88ffbb"
                              ]
                            },
                            {
                              "id": "4eb66d10-cd6d-4d4d-9da5-e9bf606922c9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Status",
                              "type": 2,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "servicehealthresources\r\n| where type =~ 'microsoft.resourcehealth/events'\r\n| extend Status = tostring(properties.Status)\r\n| distinct Status",
                              "crossComponentResources": [
                                "{Subscriptions}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1",
                                  "value::all"
                                ]
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "value": [
                                "value::all"
                              ]
                            },
                            {
                              "id": "72f1272d-49b9-44e5-b314-1004f2a89af9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Services",
                              "type": 2,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "ServiceHealthResources\r\n| where type =~ 'Microsoft.ResourceHealth/events'\r\n| mv-expand Impact = properties.Impact\r\n| extend Service = tostring(Impact.ImpactedService)\r\n| extend Service = strcat_array(split(Service, \"\\\\\"), \"-\")\r\n| extend Service = strcat_array(split(Service, \"&\"), \"-\")\r\n| distinct Service",
                              "crossComponentResources": [
                                "{Subscriptions}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1",
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "value": [
                                "value::all"
                              ]
                            },
                            {
                              "id": "4c3e8fa9-2307-4dba-a9a3-1b2f75e2f079",
                              "version": "KqlParameterItem/1.0",
                              "name": "Regions",
                              "type": 2,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "ServiceHealthResources\r\n| where type =~ 'Microsoft.ResourceHealth/events'\r\n| mv-expand Impact = properties.Impact\r\n| mv-expand Regions = Impact.ImpactedRegions\r\n| extend Regions = tostring(Regions.ImpactedRegion)\r\n| distinct Regions",
                              "crossComponentResources": [
                                "{Subscriptions}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1",
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "value": [
                                "West Europe",
                                "North Europe"
                              ]
                            },
                            {
                              "id": "c87bf496-07f2-4856-80c0-96cc5f110895",
                              "version": "KqlParameterItem/1.0",
                              "name": "TimeRange",
                              "type": 4,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "value": {
                                "durationMs": 7776000000
                              }
                            }
                          ],
                          "style": "above",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "customWidth": "50",
                        "name": "parameters - 0",
                        "styleSettings": {
                          "margin": "50",
                          "padding": "50",
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "servicehealthresources\r\n| where type =~ 'microsoft.resourcehealth/events'\r\n| extend EventLevel = tostring(properties.EventLevel),\r\n        EventType = tostring(properties.EventType),\r\n        Status = tostring(properties.Status),\r\n        Header = tostring(properties.Header),\r\n        impactType = tostring(properties.impactType),\r\n        Title = tostring(properties.Title),\r\n        Summary = tostring(properties.Summary),\r\n        impactStartTime = todatetime(tolong(properties.ImpactStartTime)), \r\n        impactMitigationTime = todatetime(tolong(properties.ImpactMitigationTime))\r\n| where impactStartTime {TimeRange}\r\n| mv-expand Impact = properties.Impact\r\n| extend Service = tostring(Impact.ImpactedService)\r\n| where Service in ({Services})\r\n| where Status in ({Status})\r\n| summarize count() by EventLevel\r\n| sort by count_\r\n//| summarize Informational = countif(EventLevel == \"Informational\"),\r\n            //Warning = countif(EventLevel == \"Warning\"),\r\n            //HealthAdvisory = countif(EventType == \"HealthAdvisory\"),\r\n            //PlannedMaintenance = countif(EventType == \"PlannedMaintenance\"),\r\n            //SecurityAdvisory = countif(EventType == \"SecurityAdvisory\"),\r\n            //ServiceIssue = countif(EventType == \"ServiceIssue\"),\r\n            //Active = countif(Status == \"Active\"),\r\n            //Resolved = countif(Status == \"Resolved\"),\r\n            //NetworkConnectivity = countif(impactType == \"NetworkConnectivity\"),\r\n            //NoImpact = countif(impactType == \"NoImpact\"),\r\n            //ServiceAvailability = countif(impactType == \"ServiceAvailability\"),\r\n            //ServiceManagementOperations = countif(impactType == \"ServiceManagementOperations\"),\r\n            //Other = countif(impactType == \"Other\" or isempty(impactType))\r\n//| extend Chart = pack_all()\r\n//| project Chart\r\n//| mv-expand bagexpansion = array Chart\r\n//| project tostring(name = Chart[0]), todouble(val = Chart[1])",
                          "size": 3,
                          "title": "EventLevel",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscriptions}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "EventLevel",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "showBorder": true,
                            "sortCriteriaField": "val",
                            "sortOrderField": 2,
                            "size": "auto"
                          }
                        },
                        "customWidth": "30",
                        "name": "EventLevel",
                        "styleSettings": {
                          "margin": "30",
                          "padding": "30",
                          "maxWidth": "30",
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "servicehealthresources\r\n| where type =~ 'microsoft.resourcehealth/events'\r\n| extend EventLevel = tostring(properties.EventLevel),\r\n        EventType = tostring(properties.EventType),\r\n        Status = tostring(properties.Status),\r\n        Header = tostring(properties.Header),\r\n        impactType = tostring(properties.impactType),\r\n        Title = tostring(properties.Title),\r\n        Summary = tostring(properties.Summary),\r\n        impactStartTime = todatetime(tolong(properties.ImpactStartTime)), \r\n        impactMitigationTime = todatetime(tolong(properties.ImpactMitigationTime))\r\n| where impactStartTime {TimeRange}\r\n| mv-expand Impact = properties.Impact\r\n| extend Service = tostring(Impact.ImpactedService)\r\n| where Service in ({Services})\r\n| where Status in ({Status})\r\n| summarize count() by Status\r\n| sort by count_\r\n//| summarize Informational = countif(EventLevel == \"Informational\"),\r\n            //Warning = countif(EventLevel == \"Warning\"),\r\n            //HealthAdvisory = countif(EventType == \"HealthAdvisory\"),\r\n            //PlannedMaintenance = countif(EventType == \"PlannedMaintenance\"),\r\n            //SecurityAdvisory = countif(EventType == \"SecurityAdvisory\"),\r\n            //ServiceIssue = countif(EventType == \"ServiceIssue\"),\r\n            //Active = countif(Status == \"Active\"),\r\n            //Resolved = countif(Status == \"Resolved\"),\r\n            //NetworkConnectivity = countif(impactType == \"NetworkConnectivity\"),\r\n            //NoImpact = countif(impactType == \"NoImpact\"),\r\n            //ServiceAvailability = countif(impactType == \"ServiceAvailability\"),\r\n            //ServiceManagementOperations = countif(impactType == \"ServiceManagementOperations\"),\r\n            //Other = countif(impactType == \"Other\" or isempty(impactType))\r\n//| extend Chart = pack_all()\r\n//| project Chart\r\n//| mv-expand bagexpansion = array Chart\r\n//| project tostring(name = Chart[0]), todouble(val = Chart[1])",
                          "size": 3,
                          "title": "Status",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscriptions}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Status",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "showBorder": true,
                            "sortCriteriaField": "val",
                            "sortOrderField": 2,
                            "size": "auto"
                          }
                        },
                        "customWidth": "20",
                        "name": "Status",
                        "styleSettings": {
                          "margin": "20",
                          "padding": "20",
                          "maxWidth": "20",
                          "showBorder": true
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "9fb8e529-2818-4000-bdf0-48808de48eb7",
                              "version": "KqlParameterItem/1.0",
                              "name": "Columns",
                              "label": "Select Columns",
                              "type": 2,
                              "description": "Select columns to display in log view below",
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "",
                              "delimiter": ",",
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "jsonData": "[\"Service\", \"Status\",\"EventType\",\"EventLevel\", \"impactStartTime\", \"impactMitigationTime\", \"impactType\", \"Regions\", \"AffectedResources\"]",
                              "defaultValue": "value::all",
                              "value": [
                                "value::all"
                              ]
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "microsoft.insights/components"
                        },
                        "name": "parameters - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "servicehealthresources\r\n| where type =~ 'microsoft.resourcehealth/events'\r\n| extend EventLevel = tostring(properties.EventLevel),\r\n        EventType = tostring(properties.EventType),\r\n        Status = tostring(properties.Status),\r\n        Header = tostring(properties.Header),\r\n        impactType = tostring(properties.impactType),\r\n        Title = tostring(properties.Title),\r\n        Summary = tostring(properties.Summary),\r\n        impactStartTime = todatetime(tolong(properties.ImpactStartTime)), \r\n        impactMitigationTime = todatetime(tolong(properties.ImpactMitigationTime))  \r\n        | where EventType == \"ServiceIssue\"      \r\n| where impactStartTime {TimeRange}\r\n| mv-expand Impact = properties.Impact\r\n| extend Service = tostring(Impact.ImpactedService)\r\n| extend Service = strcat_array(split(Service, \"\\\\\"), \"-\")\r\n| extend Service = strcat_array(split(Service, \"&\"), \"-\")\r\n| where Service in ({Services})\r\n| mv-expand Regions = Impact.ImpactedRegions\r\n| extend ImpactedRegions = tostring(Regions.ImpactedRegion)\r\n| where ImpactedRegions in ({Regions})\r\n| summarize arg_max(subscriptionId, EventType, EventLevel, \r\n                    Status, impactStartTime, impactMitigationTime, \r\n                    Service, Title, properties, impactType, name), \r\n            Regions=make_set(ImpactedRegions) by id\r\n| where Status in ({Status})\r\n| join kind = leftouter \r\n    (servicehealthresources\r\n        | where type =~ 'microsoft.resourcehealth/events/impactedresources'\r\n        | parse id with alertId \"/impactedResources/\" *\r\n        | extend targetResourceId = tolower(properties.targetResourceId)\r\n        | summarize AffectedResources=make_set(targetResourceId) by alertId) on $left.id == $right.alertId\r\n| extend link = strcat(\"https://app.azure.com/h/\", name)\r\n| extend Details = pack_all()\r\n| project subscriptionId, id, Title, {Columns}, Details, properties, name, link\r\n",
                          "size": 0,
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscriptions}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "OpenBlade",
                                  "linkIsContextBlade": true,
                                  "showIcon": true,
                                  "bladeOpenContext": {
                                    "bladeName": "HealthAdvisoriesBlade",
                                    "extensionName": "Microsoft_Azure_Health",
                                    "bladeParameters": [
                                      {
                                        "name": "fromDeeplink~",
                                        "source": "static",
                                        "value": "false"
                                      },
                                      {
                                        "name": "index~",
                                        "source": "static",
                                        "value": "0"
                                      },
                                      {
                                        "name": "trackingId",
                                        "source": "column",
                                        "value": "name"
                                      },
                                      {
                                        "name": "impactedSubscriptions",
                                        "source": "column",
                                        "value": "subscriptionId"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "55.5714ch"
                                }
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "id",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "linkIsContextBlade": true,
                                  "showIcon": true,
                                  "customColumnWidthSetting": "14.4286ch"
                                }
                              },
                              {
                                "columnMatch": "Title",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "Service",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "28.2857ch"
                                }
                              },
                              {
                                "columnMatch": "Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Active",
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "16.5ch"
                                }
                              },
                              {
                                "columnMatch": "EventType",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "PlannedMaintenance",
                                      "representation": "pending",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "SecurityAdvisory",
                                      "representation": "Important",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "ServiceIssue",
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "23ch"
                                }
                              },
                              {
                                "columnMatch": "EventLevel",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Warning",
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "1",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "18.7143ch"
                                }
                              },
                              {
                                "columnMatch": "impactStartTime",
                                "formatter": 6,
                                "formatOptions": {
                                  "customColumnWidthSetting": "24.8571ch"
                                }
                              },
                              {
                                "columnMatch": "impactMitigationTime",
                                "formatter": 6,
                                "formatOptions": {
                                  "customColumnWidthSetting": "27.2857ch"
                                }
                              },
                              {
                                "columnMatch": "impactType",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "20.5714ch"
                                }
                              },
                              {
                                "columnMatch": "AffectedResources",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "Details",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "🔍 View Details",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "properties",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "name",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "link",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkIsContextBlade": false
                                }
                              },
                              {
                                "columnMatch": "ImpactedResources",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "linkIsContextBlade": true,
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Header",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "Summary",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkIsContextBlade": true
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "subscriptionId"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "Title"
                            }
                          },
                          "sortBy": []
                        },
                        "name": "query - 1",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "name": "Summary",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "name": "group - 5"
          }
        ]
      },
      "name": "Title",
      "styleSettings": {
        "showBorder": true
      }
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "fromTemplateId": "community-Workbooks/byork/servicehealth",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
